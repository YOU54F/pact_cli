on:
  workflow_call:
    inputs:
      target:
        description: 'Target platform'
        required: true
        default: 'x86_64-apple-darwin'
        type: string
      slim:
        description: 'Enable slim mode'
        required: false
        default: false
        type: boolean
      use-cross:
        description: 'Enable cross-compilation'
        required: false
        default: false
        type: boolean
      os:
        description: 'Operating system'
        required: true
        default: 'macos-14'
        type: string
jobs:
  build_workflow:
    runs-on: ${{ inputs.os }}
    permissions:
      contents: write
    env:
      SLIM: ${{ inputs.slim }}
    steps:
      - uses: actions/checkout@v3
      - name: Install stable Rust Toolchain Components
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ inputs.target }}
          toolchain: stable
        if: ${{ inputs.target != 'aarch64-unknown-freebsd' && inputs.target != 'mips64-unknown-linux-gnuabi64' && inputs.target != 'mips64el-unknown-linux-gnuabi64' && inputs.target != 'mips64-unknown-linux-muslabi64' && inputs.target != 'mips64el-unknown-linux-muslabi64' && inputs.target != 's390x-unknown-linux-musl' && inputs.target != 'riscv64gc-unknown-linux-musl' }}
      - name: Install nightly Rust Toolchain Components
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ inputs.target }}
          toolchain: nightly
        if: ${{ inputs.use-cross != true && env.SLIM == 'true' }}
      - name: Install Rust Toolchain Components
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: nightly
        if: ${{ inputs.target == 'aarch64-unknown-freebsd' || inputs.target == 's390x-unknown-linux-musl' || inputs.target == 'riscv64gc-unknown-linux-musl' }}
      - name: Rust caching
        uses: Swatinem/rust-cache@v2
      - name: set MACOSX_DEPLOYMENT_TARGET to 10.9 for x86_64-apple-darwin (mavericks)
        if: ${{ inputs.target == 'x86_64-apple-darwin' }}
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.9" >> $GITHUB_ENV
      - name: set MACOSX_DEPLOYMENT_TARGET to 11.0 for aarch64-apple-darwin (big sur)
        if: ${{ inputs.target == 'aarch64-apple-darwin' }}
        run: echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
      - name: Build with cross
        # if: ${{ matrix.job.use-cross == 'true' }}
        run: make cargo_build_release TARGET=${{ inputs.target }} SLIM=${{ inputs.slim }} USE_CROSS=${{ inputs.use-cross }}
      - name: Create dist
        id: dist
        shell: bash
        run: |
          ./prep_dist.sh ${{ inputs.target }}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ inputs.target }}
          path: dist/
      - name: Publish archives and packages
        uses: softprops/action-gh-release@master
        with:
          tag_name: 'v0.0.10'
          name: 'Release v0.0.10'
          generate_release_notes: false
          body: 'Release v0.0.10'
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
